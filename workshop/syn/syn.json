{
  "version": "2.0.23",
  "types": [
    {
      "ident": "Abi",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "extern_": {
          "token": "Extern"
        },
        "name": {
          "option": {
            "syn": "lit::Str"
          }
        }
      }
    },
    {
      "ident": "path::path::AngledArgs",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "colon2": {
          "option": {
            "token": "PathSep"
          }
        },
        "lt": {
          "token": "Lt"
        },
        "args": {
          "punctuated": {
            "element": {
              "syn": "path::Arg"
            },
            "punct": "Comma"
          }
        },
        "gt": {
          "token": "Gt"
        }
      }
    },
    {
      "ident": "Arm",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "pat": {
          "syn": "pat::Pat"
        },
        "guard": {
          "option": {
            "tuple": [
              {
                "token": "If"
              },
              {
                "box": {
                  "syn": "Expr"
                }
              }
            ]
          }
        },
        "fat_arrow": {
          "token": "FatArrow"
        },
        "body": {
          "box": {
            "syn": "Expr"
          }
        },
        "comma": {
          "option": {
            "token": "Comma"
          }
        }
      }
    },
    {
      "ident": "AssocConst",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "ident": {
          "syn": "Ident"
        },
        "gens": {
          "option": {
            "syn": "path::path::AngledArgs"
          }
        },
        "eq": {
          "token": "Eq"
        },
        "value": {
          "syn": "Expr"
        }
      }
    },
    {
      "ident": "AssocType",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "ident": {
          "syn": "Ident"
        },
        "gens": {
          "option": {
            "syn": "path::path::AngledArgs"
          }
        },
        "eq": {
          "token": "Eq"
        },
        "ty": {
          "syn": "Type"
        }
      }
    },
    {
      "ident": "attr::Style",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "variants": {
        "Outer": [],
        "Inner": [
          {
            "token": "Not"
          }
        ]
      }
    },
    {
      "ident": "attr::Attr",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "pound": {
          "token": "Pound"
        },
        "style": {
          "syn": "attr::Style"
        },
        "bracket": {
          "group": "Bracket"
        },
        "meta": {
          "syn": "meta::Meta"
        }
      }
    },
    {
      "ident": "typ::FnArg",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "name": {
          "option": {
            "tuple": [
              {
                "syn": "Ident"
              },
              {
                "token": "Colon"
              }
            ]
          }
        },
        "ty": {
          "syn": "Type"
        }
      }
    },
    {
      "ident": "typ::Variadic",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "name": {
          "option": {
            "tuple": [
              {
                "syn": "Ident"
              },
              {
                "token": "Colon"
              }
            ]
          }
        },
        "dots": {
          "token": "DotDotDot"
        },
        "comma": {
          "option": {
            "token": "Comma"
          }
        }
      }
    },
    {
      "ident": "BinOp",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "variants": {
        "Add": [
          {
            "token": "Plus"
          }
        ],
        "Sub": [
          {
            "token": "Minus"
          }
        ],
        "Mul": [
          {
            "token": "Star"
          }
        ],
        "Div": [
          {
            "token": "Slash"
          }
        ],
        "Rem": [
          {
            "token": "Percent"
          }
        ],
        "And": [
          {
            "token": "AndAnd"
          }
        ],
        "Or": [
          {
            "token": "OrOr"
          }
        ],
        "BitXor": [
          {
            "token": "Caret"
          }
        ],
        "BitAnd": [
          {
            "token": "And"
          }
        ],
        "BitOr": [
          {
            "token": "Or"
          }
        ],
        "Shl": [
          {
            "token": "Shl"
          }
        ],
        "Shr": [
          {
            "token": "Shr"
          }
        ],
        "Eq": [
          {
            "token": "EqEq"
          }
        ],
        "Lt": [
          {
            "token": "Lt"
          }
        ],
        "Le": [
          {
            "token": "Le"
          }
        ],
        "Ne": [
          {
            "token": "Ne"
          }
        ],
        "Ge": [
          {
            "token": "Ge"
          }
        ],
        "Gt": [
          {
            "token": "Gt"
          }
        ],
        "AddAssign": [
          {
            "token": "PlusEq"
          }
        ],
        "SubAssign": [
          {
            "token": "MinusEq"
          }
        ],
        "MulAssign": [
          {
            "token": "StarEq"
          }
        ],
        "DivAssign": [
          {
            "token": "SlashEq"
          }
        ],
        "RemAssign": [
          {
            "token": "PercentEq"
          }
        ],
        "BitXorAssign": [
          {
            "token": "CaretEq"
          }
        ],
        "BitAndAssign": [
          {
            "token": "AndEq"
          }
        ],
        "BitOrAssign": [
          {
            "token": "OrEq"
          }
        ],
        "ShlAssign": [
          {
            "token": "ShlEq"
          }
        ],
        "ShrAssign": [
          {
            "token": "ShrEq"
          }
        ]
      },
      "exhaustive": false
    },
    {
      "ident": "Block",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "brace": {
          "group": "Brace"
        },
        "stmts": {
          "vec": {
            "syn": "stmt::Stmt"
          }
        }
      }
    },
    {
      "ident": "Bgen::bound::Lifes",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "for_": {
          "token": "For"
        },
        "lt": {
          "token": "Lt"
        },
        "lifetimes": {
          "punctuated": {
            "element": {
              "syn": "gen::Param"
            },
            "punct": "Comma"
          }
        },
        "gt": {
          "token": "Gt"
        }
      }
    },
    {
      "ident": "gen::param::Const",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "const_": {
          "token": "Const"
        },
        "ident": {
          "syn": "Ident"
        },
        "colon": {
          "token": "Colon"
        },
        "ty": {
          "syn": "Type"
        },
        "eq": {
          "option": {
            "token": "Eq"
          }
        },
        "default": {
          "option": {
            "syn": "Expr"
          }
        }
      }
    },
    {
      "ident": "Constraint",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "ident": {
          "syn": "Ident"
        },
        "gens": {
          "option": {
            "syn": "path::path::AngledArgs"
          }
        },
        "colon": {
          "token": "Colon"
        },
        "bounds": {
          "punctuated": {
            "element": {
              "syn": "gen::bound::Type"
            },
            "punct": "Plus"
          }
        }
      }
    },
    {
      "ident": "Data",
      "features": {
        "any": [
          "derive"
        ]
      },
      "variants": {
        "Struct": [
          {
            "syn": "DataStruct"
          }
        ],
        "Enum": [
          {
            "syn": "DataEnum"
          }
        ],
        "Union": [
          {
            "syn": "DataUnion"
          }
        ]
      }
    },
    {
      "ident": "DataEnum",
      "features": {
        "any": [
          "derive"
        ]
      },
      "fields": {
        "enum_": {
          "token": "Enum"
        },
        "brace": {
          "group": "Brace"
        },
        "variants": {
          "punctuated": {
            "element": {
              "syn": "Variant"
            },
            "punct": "Comma"
          }
        }
      }
    },
    {
      "ident": "DataStruct",
      "features": {
        "any": [
          "derive"
        ]
      },
      "fields": {
        "struct_": {
          "token": "Struct"
        },
        "fields": {
          "syn": "Fields"
        },
        "semi": {
          "option": {
            "token": "Semi"
          }
        }
      }
    },
    {
      "ident": "DataUnion",
      "features": {
        "any": [
          "derive"
        ]
      },
      "fields": {
        "union_": {
          "token": "Union"
        },
        "fields": {
          "syn": "FieldsNamed"
        }
      }
    },
    {
      "ident": "DeriveInput",
      "features": {
        "any": [
          "derive"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "vis": {
          "syn": "Visibility"
        },
        "ident": {
          "syn": "Ident"
        },
        "gens": {
          "syn": "gen::Gens"
        },
        "data": {
          "syn": "Data"
        }
      }
    },
    {
      "ident": "Expr",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "variants": {
        "Array": [
          {
            "syn": "expr::Array"
          }
        ],
        "Assign": [
          {
            "syn": "expr::Assign"
          }
        ],
        "Async": [
          {
            "syn": "expr::Async"
          }
        ],
        "Await": [
          {
            "syn": "expr::Await"
          }
        ],
        "Binary": [
          {
            "syn": "expr::Binary"
          }
        ],
        "Block": [
          {
            "syn": "expr::Block"
          }
        ],
        "Break": [
          {
            "syn": "expr::Break"
          }
        ],
        "Call": [
          {
            "syn": "expr::Call"
          }
        ],
        "Cast": [
          {
            "syn": "expr::Cast"
          }
        ],
        "Closure": [
          {
            "syn": "expr::Closure"
          }
        ],
        "Const": [
          {
            "syn": "expr::Const"
          }
        ],
        "Continue": [
          {
            "syn": "expr::Continue"
          }
        ],
        "Field": [
          {
            "syn": "expr::Field"
          }
        ],
        "ForLoop": [
          {
            "syn": "expr::ForLoop"
          }
        ],
        "Group": [
          {
            "syn": "expr::Group"
          }
        ],
        "If": [
          {
            "syn": "expr::If"
          }
        ],
        "Index": [
          {
            "syn": "expr::Index"
          }
        ],
        "Infer": [
          {
            "syn": "expr::Infer"
          }
        ],
        "Let": [
          {
            "syn": "expr::Let"
          }
        ],
        "Lit": [
          {
            "syn": "expr::Lit"
          }
        ],
        "Loop": [
          {
            "syn": "expr::Loop"
          }
        ],
        "Macro": [
          {
            "syn": "expr::Mac"
          }
        ],
        "Match": [
          {
            "syn": "expr::Match"
          }
        ],
        "MethodCall": [
          {
            "syn": "expr::MethodCall"
          }
        ],
        "Paren": [
          {
            "syn": "expr::Paren"
          }
        ],
        "Path": [
          {
            "syn": "expr::Path"
          }
        ],
        "Range": [
          {
            "syn": "expr::Range"
          }
        ],
        "Reference": [
          {
            "syn": "expr::Ref"
          }
        ],
        "Repeat": [
          {
            "syn": "expr::Repeat"
          }
        ],
        "Return": [
          {
            "syn": "expr::Return"
          }
        ],
        "Struct": [
          {
            "syn": "expr::ExprStruct"
          }
        ],
        "Try": [
          {
            "syn": "expr::Try"
          }
        ],
        "TryBlock": [
          {
            "syn": "expr::TryBlock"
          }
        ],
        "Tuple": [
          {
            "syn": "expr::Tuple"
          }
        ],
        "Unary": [
          {
            "syn": "expr::Unary"
          }
        ],
        "Unsafe": [
          {
            "syn": "expr::Unsafe"
          }
        ],
        "Verbatim": [
          {
            "syn": "pm2::Stream"
          }
        ],
        "While": [
          {
            "syn": "expr::While"
          }
        ],
        "Yield": [
          {
            "syn": "expr::Yield"
          }
        ]
      },
      "exhaustive": false
    },
    {
      "ident": "expr::Array",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "bracket": {
          "group": "Bracket"
        },
        "elems": {
          "punctuated": {
            "element": {
              "syn": "Expr"
            },
            "punct": "Comma"
          }
        }
      }
    },
    {
      "ident": "expr::Assign",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "left": {
          "box": {
            "syn": "Expr"
          }
        },
        "eq": {
          "token": "Eq"
        },
        "right": {
          "box": {
            "syn": "Expr"
          }
        }
      }
    },
    {
      "ident": "expr::Async",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "async_": {
          "token": "Async"
        },
        "capture": {
          "option": {
            "token": "Move"
          }
        },
        "block": {
          "syn": "Block"
        }
      }
    },
    {
      "ident": "expr::Await",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "base": {
          "box": {
            "syn": "Expr"
          }
        },
        "dot": {
          "token": "Dot"
        },
        "await_": {
          "token": "Await"
        }
      }
    },
    {
      "ident": "expr::Binary",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "left": {
          "box": {
            "syn": "Expr"
          }
        },
        "op": {
          "syn": "BinOp"
        },
        "right": {
          "box": {
            "syn": "Expr"
          }
        }
      }
    },
    {
      "ident": "expr::Block",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "label": {
          "option": {
            "syn": "Label"
          }
        },
        "block": {
          "syn": "Block"
        }
      }
    },
    {
      "ident": "expr::Break",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "break_": {
          "token": "Break"
        },
        "label": {
          "option": {
            "syn": "Lifetime"
          }
        },
        "expr": {
          "option": {
            "box": {
              "syn": "Expr"
            }
          }
        }
      }
    },
    {
      "ident": "expr::Call",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "func": {
          "box": {
            "syn": "Expr"
          }
        },
        "paren": {
          "group": "Paren"
        },
        "args": {
          "punctuated": {
            "element": {
              "syn": "Expr"
            },
            "punct": "Comma"
          }
        }
      }
    },
    {
      "ident": "expr::Cast",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "expr": {
          "box": {
            "syn": "Expr"
          }
        },
        "as_": {
          "token": "As"
        },
        "ty": {
          "box": {
            "syn": "Type"
          }
        }
      }
    },
    {
      "ident": "expr::Closure",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "lifetimes": {
          "option": {
            "syn": "Bgen::bound::Lifes"
          }
        },
        "constness": {
          "option": {
            "token": "Const"
          }
        },
        "movability": {
          "option": {
            "token": "Static"
          }
        },
        "asyncness": {
          "option": {
            "token": "Async"
          }
        },
        "capture": {
          "option": {
            "token": "Move"
          }
        },
        "or1": {
          "token": "Or"
        },
        "inputs": {
          "punctuated": {
            "element": {
              "syn": "pat::Pat"
            },
            "punct": "Comma"
          }
        },
        "or2": {
          "token": "Or"
        },
        "output": {
          "syn": "typ::Ret"
        },
        "body": {
          "box": {
            "syn": "Expr"
          }
        }
      }
    },
    {
      "ident": "expr::Const",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "const_": {
          "token": "Const"
        },
        "block": {
          "syn": "Block"
        }
      }
    },
    {
      "ident": "expr::Continue",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "continue_": {
          "token": "Continue"
        },
        "label": {
          "option": {
            "syn": "Lifetime"
          }
        }
      }
    },
    {
      "ident": "expr::Field",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "base": {
          "box": {
            "syn": "Expr"
          }
        },
        "dot": {
          "token": "Dot"
        },
        "member": {
          "syn": "Member"
        }
      }
    },
    {
      "ident": "expr::ForLoop",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "label": {
          "option": {
            "syn": "Label"
          }
        },
        "for_": {
          "token": "For"
        },
        "pat": {
          "box": {
            "syn": "pat::Pat"
          }
        },
        "in_": {
          "token": "In"
        },
        "expr": {
          "box": {
            "syn": "Expr"
          }
        },
        "body": {
          "syn": "Block"
        }
      }
    },
    {
      "ident": "expr::Group",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "group": {
          "group": "Group"
        },
        "expr": {
          "box": {
            "syn": "Expr"
          }
        }
      }
    },
    {
      "ident": "expr::If",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "if_": {
          "token": "If"
        },
        "cond": {
          "box": {
            "syn": "Expr"
          }
        },
        "then_branch": {
          "syn": "Block"
        },
        "else_branch": {
          "option": {
            "tuple": [
              {
                "token": "Else"
              },
              {
                "box": {
                  "syn": "Expr"
                }
              }
            ]
          }
        }
      }
    },
    {
      "ident": "expr::Index",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "expr": {
          "box": {
            "syn": "Expr"
          }
        },
        "bracket": {
          "group": "Bracket"
        },
        "index": {
          "box": {
            "syn": "Expr"
          }
        }
      }
    },
    {
      "ident": "expr::Infer",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "underscore": {
          "token": "Underscore"
        }
      }
    },
    {
      "ident": "expr::Let",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "let_": {
          "token": "Let"
        },
        "pat": {
          "box": {
            "syn": "pat::Pat"
          }
        },
        "eq": {
          "token": "Eq"
        },
        "expr": {
          "box": {
            "syn": "Expr"
          }
        }
      }
    },
    {
      "ident": "expr::Lit",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "lit": {
          "syn": "Lit"
        }
      }
    },
    {
      "ident": "expr::Loop",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "label": {
          "option": {
            "syn": "Label"
          }
        },
        "loop_": {
          "token": "Loop"
        },
        "body": {
          "syn": "Block"
        }
      }
    },
    {
      "ident": "expr::Mac",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "mac": {
          "syn": "Macro"
        }
      }
    },
    {
      "ident": "expr::Match",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "match_": {
          "token": "Match"
        },
        "expr": {
          "box": {
            "syn": "Expr"
          }
        },
        "brace": {
          "group": "Brace"
        },
        "arms": {
          "vec": {
            "syn": "Arm"
          }
        }
      }
    },
    {
      "ident": "expr::MethodCall",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "receiver": {
          "box": {
            "syn": "Expr"
          }
        },
        "dot": {
          "token": "Dot"
        },
        "method": {
          "syn": "Ident"
        },
        "turbofish": {
          "option": {
            "syn": "path::path::AngledArgs"
          }
        },
        "paren": {
          "group": "Paren"
        },
        "args": {
          "punctuated": {
            "element": {
              "syn": "Expr"
            },
            "punct": "Comma"
          }
        }
      }
    },
    {
      "ident": "expr::Paren",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "paren": {
          "group": "Paren"
        },
        "expr": {
          "box": {
            "syn": "Expr"
          }
        }
      }
    },
    {
      "ident": "expr::Path",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "qself": {
          "option": {
            "syn": "QSelf"
          }
        },
        "path": {
          "syn": "Path"
        }
      }
    },
    {
      "ident": "expr::Range",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "start": {
          "option": {
            "box": {
              "syn": "Expr"
            }
          }
        },
        "limits": {
          "syn": "RangeLimits"
        },
        "end": {
          "option": {
            "box": {
              "syn": "Expr"
            }
          }
        }
      }
    },
    {
      "ident": "expr::Ref",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "and": {
          "token": "And"
        },
        "mutability": {
          "option": {
            "token": "Mut"
          }
        },
        "expr": {
          "box": {
            "syn": "Expr"
          }
        }
      }
    },
    {
      "ident": "expr::Repeat",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "bracket": {
          "group": "Bracket"
        },
        "expr": {
          "box": {
            "syn": "Expr"
          }
        },
        "semi": {
          "token": "Semi"
        },
        "len": {
          "box": {
            "syn": "Expr"
          }
        }
      }
    },
    {
      "ident": "expr::Return",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "return_": {
          "token": "Return"
        },
        "expr": {
          "option": {
            "box": {
              "syn": "Expr"
            }
          }
        }
      }
    },
    {
      "ident": "expr::ExprStruct",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "qself": {
          "option": {
            "syn": "QSelf"
          }
        },
        "path": {
          "syn": "Path"
        },
        "brace": {
          "group": "Brace"
        },
        "fields": {
          "punctuated": {
            "element": {
              "syn": "FieldValue"
            },
            "punct": "Comma"
          }
        },
        "dot2": {
          "option": {
            "token": "DotDot"
          }
        },
        "rest": {
          "option": {
            "box": {
              "syn": "Expr"
            }
          }
        }
      }
    },
    {
      "ident": "expr::Try",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "expr": {
          "box": {
            "syn": "Expr"
          }
        },
        "question": {
          "token": "Question"
        }
      }
    },
    {
      "ident": "expr::TryBlock",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "try_": {
          "token": "Try"
        },
        "block": {
          "syn": "Block"
        }
      }
    },
    {
      "ident": "expr::Tuple",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "paren": {
          "group": "Paren"
        },
        "elems": {
          "punctuated": {
            "element": {
              "syn": "Expr"
            },
            "punct": "Comma"
          }
        }
      }
    },
    {
      "ident": "expr::Unary",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "op": {
          "syn": "UnOp"
        },
        "expr": {
          "box": {
            "syn": "Expr"
          }
        }
      }
    },
    {
      "ident": "expr::Unsafe",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "unsafe_": {
          "token": "Unsafe"
        },
        "block": {
          "syn": "Block"
        }
      }
    },
    {
      "ident": "expr::While",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "label": {
          "option": {
            "syn": "Label"
          }
        },
        "while_": {
          "token": "While"
        },
        "cond": {
          "box": {
            "syn": "Expr"
          }
        },
        "body": {
          "syn": "Block"
        }
      }
    },
    {
      "ident": "expr::Yield",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "yield_": {
          "token": "Yield"
        },
        "expr": {
          "option": {
            "box": {
              "syn": "Expr"
            }
          }
        }
      }
    },
    {
      "ident": "Field",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "vis": {
          "syn": "Visibility"
        },
        "mutability": {
          "syn": "FieldMutability"
        },
        "ident": {
          "option": {
            "syn": "Ident"
          }
        },
        "colon": {
          "option": {
            "token": "Colon"
          }
        },
        "ty": {
          "syn": "Type"
        }
      }
    },
    {
      "ident": "FieldMutability",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "variants": {
        "None": []
      },
      "exhaustive": false
    },
    {
      "ident": "pat::Field",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "member": {
          "syn": "Member"
        },
        "colon": {
          "option": {
            "token": "Colon"
          }
        },
        "pat": {
          "box": {
            "syn": "pat::Pat"
          }
        }
      }
    },
    {
      "ident": "FieldValue",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "member": {
          "syn": "Member"
        },
        "colon": {
          "option": {
            "token": "Colon"
          }
        },
        "expr": {
          "syn": "Expr"
        }
      }
    },
    {
      "ident": "Fields",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "variants": {
        "Named": [
          {
            "syn": "FieldsNamed"
          }
        ],
        "Unnamed": [
          {
            "syn": "FieldsUnnamed"
          }
        ],
        "Unit": []
      }
    },
    {
      "ident": "FieldsNamed",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "brace": {
          "group": "Brace"
        },
        "named": {
          "punctuated": {
            "element": {
              "syn": "Field"
            },
            "punct": "Comma"
          }
        }
      }
    },
    {
      "ident": "FieldsUnnamed",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "paren": {
          "group": "Paren"
        },
        "unnamed": {
          "punctuated": {
            "element": {
              "syn": "Field"
            },
            "punct": "Comma"
          }
        }
      }
    },
    {
      "ident": "File",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "shebang": {
          "option": {
            "std": "String"
          }
        },
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "items": {
          "vec": {
            "syn": "Item"
          }
        }
      }
    },
    {
      "ident": "item::FnArg",
      "features": {
        "any": [
          "full"
        ]
      },
      "variants": {
        "item::Receiver": [
          {
            "syn": "item::Receiver"
          }
        ],
        "Typed": [
          {
            "syn": "pat::Type"
          }
        ]
      }
    },
    {
      "ident": "item::Foreign::Item",
      "features": {
        "any": [
          "full"
        ]
      },
      "variants": {
        "Fn": [
          {
            "syn": "item::Foreign::Fn"
          }
        ],
        "Static": [
          {
            "syn": "item::Foreign::Static"
          }
        ],
        "Type": [
          {
            "syn": "item::Foreign::Type"
          }
        ],
        "Macro": [
          {
            "syn": "item::Foreign::Mac"
          }
        ],
        "Verbatim": [
          {
            "syn": "pm2::Stream"
          }
        ]
      },
      "exhaustive": false
    },
    {
      "ident": "item::Foreign::Fn",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "vis": {
          "syn": "Visibility"
        },
        "sig": {
          "syn": "item::Sig"
        },
        "semi": {
          "token": "Semi"
        }
      }
    },
    {
      "ident": "item::Foreign::Mac",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "mac": {
          "syn": "Macro"
        },
        "semi": {
          "option": {
            "token": "Semi"
          }
        }
      }
    },
    {
      "ident": "item::Foreign::Static",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "vis": {
          "syn": "Visibility"
        },
        "static_": {
          "token": "Static"
        },
        "mutability": {
          "syn": "StaticMutability"
        },
        "ident": {
          "syn": "Ident"
        },
        "colon": {
          "token": "Colon"
        },
        "ty": {
          "box": {
            "syn": "Type"
          }
        },
        "semi": {
          "token": "Semi"
        }
      }
    },
    {
      "ident": "item::Foreign::Type",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "vis": {
          "syn": "Visibility"
        },
        "type": {
          "token": "Type"
        },
        "ident": {
          "syn": "Ident"
        },
        "gens": {
          "syn": "gen::Gens"
        },
        "semi": {
          "token": "Semi"
        }
      }
    },
    {
      "ident": "path::Arg",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "variants": {
        "Lifetime": [
          {
            "syn": "Lifetime"
          }
        ],
        "Type": [
          {
            "syn": "Type"
          }
        ],
        "Const": [
          {
            "syn": "Expr"
          }
        ],
        "AssocType": [
          {
            "syn": "AssocType"
          }
        ],
        "AssocConst": [
          {
            "syn": "AssocConst"
          }
        ],
        "Constraint": [
          {
            "syn": "Constraint"
          }
        ]
      },
      "exhaustive": false
    },
    {
      "ident": "gen::Param",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "variants": {
        "Lifetime": [
          {
            "syn": "gen::param::Life"
          }
        ],
        "Type": [
          {
            "syn": "gen::param::Type"
          }
        ],
        "Const": [
          {
            "syn": "gen::param::Const"
          }
        ]
      }
    },
    {
      "ident": "gen::Gens",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "lt": {
          "option": {
            "token": "Lt"
          }
        },
        "params": {
          "punctuated": {
            "element": {
              "syn": "gen::Param"
            },
            "punct": "Comma"
          }
        },
        "gt": {
          "option": {
            "token": "Gt"
          }
        },
        "where_clause": {
          "option": {
            "syn": "gen::Where"
          }
        }
      }
    },
    {
      "ident": "item::Impl::Item",
      "features": {
        "any": [
          "full"
        ]
      },
      "variants": {
        "Const": [
          {
            "syn": "item::Impl::Const"
          }
        ],
        "Fn": [
          {
            "syn": "item::Impl::Fn"
          }
        ],
        "Type": [
          {
            "syn": "item::Impl::Type"
          }
        ],
        "Macro": [
          {
            "syn": "item::Impl::Mac"
          }
        ],
        "Verbatim": [
          {
            "syn": "pm2::Stream"
          }
        ]
      },
      "exhaustive": false
    },
    {
      "ident": "item::Impl::Const",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "vis": {
          "syn": "Visibility"
        },
        "defaultness": {
          "option": {
            "token": "Default"
          }
        },
        "const_": {
          "token": "Const"
        },
        "ident": {
          "syn": "Ident"
        },
        "gens": {
          "syn": "gen::Gens"
        },
        "colon": {
          "token": "Colon"
        },
        "ty": {
          "syn": "Type"
        },
        "eq": {
          "token": "Eq"
        },
        "expr": {
          "syn": "Expr"
        },
        "semi": {
          "token": "Semi"
        }
      }
    },
    {
      "ident": "item::Impl::Fn",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "vis": {
          "syn": "Visibility"
        },
        "defaultness": {
          "option": {
            "token": "Default"
          }
        },
        "sig": {
          "syn": "item::Sig"
        },
        "block": {
          "syn": "Block"
        }
      }
    },
    {
      "ident": "item::Impl::Mac",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "mac": {
          "syn": "Macro"
        },
        "semi": {
          "option": {
            "token": "Semi"
          }
        }
      }
    },
    {
      "ident": "item::Impl::Type",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "vis": {
          "syn": "Visibility"
        },
        "defaultness": {
          "option": {
            "token": "Default"
          }
        },
        "type": {
          "token": "Type"
        },
        "ident": {
          "syn": "Ident"
        },
        "gens": {
          "syn": "gen::Gens"
        },
        "eq": {
          "token": "Eq"
        },
        "ty": {
          "syn": "Type"
        },
        "semi": {
          "token": "Semi"
        }
      }
    },
    {
      "ident": "item::Impl::Restriction",
      "features": {
        "any": [
          "full"
        ]
      },
      "variants": {},
      "exhaustive": false
    },
    {
      "ident": "Index",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "index": {
          "std": "u32"
        },
        "span": {
          "syn": "pm2::Span"
        }
      }
    },
    {
      "ident": "Item",
      "features": {
        "any": [
          "full"
        ]
      },
      "variants": {
        "Const": [
          {
            "syn": "item::Const"
          }
        ],
        "Enum": [
          {
            "syn": "item::Enum"
          }
        ],
        "ExternCrate": [
          {
            "syn": "item::ExternCrate"
          }
        ],
        "Fn": [
          {
            "syn": "item::Fn"
          }
        ],
        "Foreign": [
          {
            "syn": "item::Foreign"
          }
        ],
        "Impl": [
          {
            "syn": "item::Impl"
          }
        ],
        "Macro": [
          {
            "syn": "item::Mac"
          }
        ],
        "Mod": [
          {
            "syn": "item::Mod"
          }
        ],
        "Static": [
          {
            "syn": "item::Static"
          }
        ],
        "Struct": [
          {
            "syn": "item::Struct"
          }
        ],
        "Trait": [
          {
            "syn": "item::Trait"
          }
        ],
        "TraitAlias": [
          {
            "syn": "item::TraitAlias"
          }
        ],
        "Type": [
          {
            "syn": "item::Type"
          }
        ],
        "Union": [
          {
            "syn": "item::Union"
          }
        ],
        "Use": [
          {
            "syn": "item::Use"
          }
        ],
        "Verbatim": [
          {
            "syn": "pm2::Stream"
          }
        ]
      },
      "exhaustive": false
    },
    {
      "ident": "item::Const",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "vis": {
          "syn": "Visibility"
        },
        "const_": {
          "token": "Const"
        },
        "ident": {
          "syn": "Ident"
        },
        "gens": {
          "syn": "gen::Gens"
        },
        "colon": {
          "token": "Colon"
        },
        "ty": {
          "box": {
            "syn": "Type"
          }
        },
        "eq": {
          "token": "Eq"
        },
        "expr": {
          "box": {
            "syn": "Expr"
          }
        },
        "semi": {
          "token": "Semi"
        }
      }
    },
    {
      "ident": "item::Enum",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "vis": {
          "syn": "Visibility"
        },
        "enum_": {
          "token": "Enum"
        },
        "ident": {
          "syn": "Ident"
        },
        "gens": {
          "syn": "gen::Gens"
        },
        "brace": {
          "group": "Brace"
        },
        "variants": {
          "punctuated": {
            "element": {
              "syn": "Variant"
            },
            "punct": "Comma"
          }
        }
      }
    },
    {
      "ident": "item::ExternCrate",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "vis": {
          "syn": "Visibility"
        },
        "extern_": {
          "token": "Extern"
        },
        "crate_": {
          "token": "Crate"
        },
        "ident": {
          "syn": "Ident"
        },
        "rename": {
          "option": {
            "tuple": [
              {
                "token": "As"
              },
              {
                "syn": "Ident"
              }
            ]
          }
        },
        "semi": {
          "token": "Semi"
        }
      }
    },
    {
      "ident": "item::Fn",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "vis": {
          "syn": "Visibility"
        },
        "sig": {
          "syn": "item::Sig"
        },
        "block": {
          "box": {
            "syn": "Block"
          }
        }
      }
    },
    {
      "ident": "item::Foreign",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "unsafety": {
          "option": {
            "token": "Unsafe"
          }
        },
        "abi": {
          "syn": "Abi"
        },
        "brace": {
          "group": "Brace"
        },
        "items": {
          "vec": {
            "syn": "item::Foreign::Item"
          }
        }
      }
    },
    {
      "ident": "item::Impl",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "defaultness": {
          "option": {
            "token": "Default"
          }
        },
        "unsafety": {
          "option": {
            "token": "Unsafe"
          }
        },
        "impl_": {
          "token": "Impl"
        },
        "gens": {
          "syn": "gen::Gens"
        },
        "trait_": {
          "option": {
            "tuple": [
              {
                "option": {
                  "token": "Not"
                }
              },
              {
                "syn": "Path"
              },
              {
                "token": "For"
              }
            ]
          }
        },
        "self_ty": {
          "box": {
            "syn": "Type"
          }
        },
        "brace": {
          "group": "Brace"
        },
        "items": {
          "vec": {
            "syn": "item::Impl::Item"
          }
        }
      }
    },
    {
      "ident": "item::Mac",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "ident": {
          "option": {
            "syn": "Ident"
          }
        },
        "mac": {
          "syn": "Macro"
        },
        "semi": {
          "option": {
            "token": "Semi"
          }
        }
      }
    },
    {
      "ident": "item::Mod",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "vis": {
          "syn": "Visibility"
        },
        "unsafety": {
          "option": {
            "token": "Unsafe"
          }
        },
        "mod_": {
          "token": "Mod"
        },
        "ident": {
          "syn": "Ident"
        },
        "content": {
          "option": {
            "tuple": [
              {
                "group": "Brace"
              },
              {
                "vec": {
                  "syn": "Item"
                }
              }
            ]
          }
        },
        "semi": {
          "option": {
            "token": "Semi"
          }
        }
      }
    },
    {
      "ident": "item::Static",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "vis": {
          "syn": "Visibility"
        },
        "static_": {
          "token": "Static"
        },
        "mutability": {
          "syn": "StaticMutability"
        },
        "ident": {
          "syn": "Ident"
        },
        "colon": {
          "token": "Colon"
        },
        "ty": {
          "box": {
            "syn": "Type"
          }
        },
        "eq": {
          "token": "Eq"
        },
        "expr": {
          "box": {
            "syn": "Expr"
          }
        },
        "semi": {
          "token": "Semi"
        }
      }
    },
    {
      "ident": "item::Struct",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "vis": {
          "syn": "Visibility"
        },
        "struct_": {
          "token": "Struct"
        },
        "ident": {
          "syn": "Ident"
        },
        "gens": {
          "syn": "gen::Gens"
        },
        "fields": {
          "syn": "Fields"
        },
        "semi": {
          "option": {
            "token": "Semi"
          }
        }
      }
    },
    {
      "ident": "item::Trait",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "vis": {
          "syn": "Visibility"
        },
        "unsafety": {
          "option": {
            "token": "Unsafe"
          }
        },
        "auto_": {
          "option": {
            "token": "Auto"
          }
        },
        "restriction": {
          "option": {
            "syn": "item::Impl::Restriction"
          }
        },
        "trait_": {
          "token": "Trait"
        },
        "ident": {
          "syn": "Ident"
        },
        "gens": {
          "syn": "gen::Gens"
        },
        "colon": {
          "option": {
            "token": "Colon"
          }
        },
        "supertraits": {
          "punctuated": {
            "element": {
              "syn": "gen::bound::Type"
            },
            "punct": "Plus"
          }
        },
        "brace": {
          "group": "Brace"
        },
        "items": {
          "vec": {
            "syn": "item::Trait::Item"
          }
        }
      }
    },
    {
      "ident": "item::TraitAlias",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "vis": {
          "syn": "Visibility"
        },
        "trait_": {
          "token": "Trait"
        },
        "ident": {
          "syn": "Ident"
        },
        "gens": {
          "syn": "gen::Gens"
        },
        "eq": {
          "token": "Eq"
        },
        "bounds": {
          "punctuated": {
            "element": {
              "syn": "gen::bound::Type"
            },
            "punct": "Plus"
          }
        },
        "semi": {
          "token": "Semi"
        }
      }
    },
    {
      "ident": "item::Type",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "vis": {
          "syn": "Visibility"
        },
        "type": {
          "token": "Type"
        },
        "ident": {
          "syn": "Ident"
        },
        "gens": {
          "syn": "gen::Gens"
        },
        "eq": {
          "token": "Eq"
        },
        "ty": {
          "box": {
            "syn": "Type"
          }
        },
        "semi": {
          "token": "Semi"
        }
      }
    },
    {
      "ident": "item::Union",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "vis": {
          "syn": "Visibility"
        },
        "union_": {
          "token": "Union"
        },
        "ident": {
          "syn": "Ident"
        },
        "gens": {
          "syn": "gen::Gens"
        },
        "fields": {
          "syn": "FieldsNamed"
        }
      }
    },
    {
      "ident": "item::Use",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "vis": {
          "syn": "Visibility"
        },
        "use_": {
          "token": "Use"
        },
        "leading_colon": {
          "option": {
            "token": "PathSep"
          }
        },
        "tree": {
          "syn": "item::Use::Tree"
        },
        "semi": {
          "token": "Semi"
        }
      }
    },
    {
      "ident": "Label",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "name": {
          "syn": "Lifetime"
        },
        "colon": {
          "token": "Colon"
        }
      }
    },
    {
      "ident": "Lifetime",
      "features": {
        "any": []
      },
      "fields": {
        "apostrophe": {
          "syn": "pm2::Span"
        },
        "ident": {
          "syn": "Ident"
        }
      }
    },
    {
      "ident": "gen::param::Life",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "lifetime": {
          "syn": "Lifetime"
        },
        "colon": {
          "option": {
            "token": "Colon"
          }
        },
        "bounds": {
          "punctuated": {
            "element": {
              "syn": "Lifetime"
            },
            "punct": "Plus"
          }
        }
      }
    },
    {
      "ident": "Lit",
      "features": {
        "any": []
      },
      "variants": {
        "Str": [
          {
            "syn": "lit::Str"
          }
        ],
        "ByteStr": [
          {
            "syn": "lit::ByteStr"
          }
        ],
        "Byte": [
          {
            "syn": "lit::Byte"
          }
        ],
        "Char": [
          {
            "syn": "lit::Char"
          }
        ],
        "Int": [
          {
            "syn": "lit::Int"
          }
        ],
        "Float": [
          {
            "syn": "lit::Float"
          }
        ],
        "Bool": [
          {
            "syn": "lit::Bool"
          }
        ],
        "Verbatim": [
          {
            "syn": "pm2::Lit"
          }
        ]
      },
      "exhaustive": false
    },
    {
      "ident": "lit::Bool",
      "features": {
        "any": []
      },
      "fields": {
        "value": {
          "std": "bool"
        },
        "span": {
          "syn": "pm2::Span"
        }
      }
    },
    {
      "ident": "lit::Byte",
      "features": {
        "any": []
      }
    },
    {
      "ident": "lit::ByteStr",
      "features": {
        "any": []
      }
    },
    {
      "ident": "lit::Char",
      "features": {
        "any": []
      }
    },
    {
      "ident": "lit::Float",
      "features": {
        "any": []
      }
    },
    {
      "ident": "lit::Int",
      "features": {
        "any": []
      }
    },
    {
      "ident": "lit::Str",
      "features": {
        "any": []
      }
    },
    {
      "ident": "stmt::Local",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "let_": {
          "token": "Let"
        },
        "pat": {
          "syn": "pat::Pat"
        },
        "init": {
          "option": {
            "syn": "stmt::LocalInit"
          }
        },
        "semi": {
          "token": "Semi"
        }
      }
    },
    {
      "ident": "stmt::LocalInit",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "eq": {
          "token": "Eq"
        },
        "expr": {
          "box": {
            "syn": "Expr"
          }
        },
        "diverge": {
          "option": {
            "tuple": [
              {
                "token": "Else"
              },
              {
                "box": {
                  "syn": "Expr"
                }
              }
            ]
          }
        }
      }
    },
    {
      "ident": "Macro",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "path": {
          "syn": "Path"
        },
        "bang": {
          "token": "Not"
        },
        "delimiter": {
          "syn": "MacroDelimiter"
        },
        "tokens": {
          "syn": "pm2::Stream"
        }
      }
    },
    {
      "ident": "MacroDelimiter",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "variants": {
        "Paren": [
          {
            "group": "Paren"
          }
        ],
        "Brace": [
          {
            "group": "Brace"
          }
        ],
        "Bracket": [
          {
            "group": "Bracket"
          }
        ]
      }
    },
    {
      "ident": "Member",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "variants": {
        "Named": [
          {
            "syn": "Ident"
          }
        ],
        "Unnamed": [
          {
            "syn": "Index"
          }
        ]
      }
    },
    {
      "ident": "meta::Meta",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "variants": {
        "Path": [
          {
            "syn": "Path"
          }
        ],
        "List": [
          {
            "syn": "meta::List"
          }
        ],
        "NameValue": [
          {
            "syn": "meta::NameValue"
          }
        ]
      }
    },
    {
      "ident": "meta::List",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "path": {
          "syn": "Path"
        },
        "delimiter": {
          "syn": "MacroDelimiter"
        },
        "tokens": {
          "syn": "pm2::Stream"
        }
      }
    },
    {
      "ident": "meta::NameValue",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "path": {
          "syn": "Path"
        },
        "eq": {
          "token": "Eq"
        },
        "value": {
          "syn": "Expr"
        }
      }
    },
    {
      "ident": "path::ParenthesizedArgs",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "paren": {
          "group": "Paren"
        },
        "inputs": {
          "punctuated": {
            "element": {
              "syn": "Type"
            },
            "punct": "Comma"
          }
        },
        "output": {
          "syn": "typ::Ret"
        }
      }
    },
    {
      "ident": "pat::Pat",
      "features": {
        "any": [
          "full"
        ]
      },
      "variants": {
        "Const": [
          {
            "syn": "expr::Const"
          }
        ],
        "Ident": [
          {
            "syn": "pat::Ident"
          }
        ],
        "Lit": [
          {
            "syn": "expr::Lit"
          }
        ],
        "Macro": [
          {
            "syn": "expr::Mac"
          }
        ],
        "Or": [
          {
            "syn": "pat::Or"
          }
        ],
        "Paren": [
          {
            "syn": "pat::Paren"
          }
        ],
        "Path": [
          {
            "syn": "expr::Path"
          }
        ],
        "Range": [
          {
            "syn": "expr::Range"
          }
        ],
        "Reference": [
          {
            "syn": "pat::Ref"
          }
        ],
        "Rest": [
          {
            "syn": "pat::Rest"
          }
        ],
        "Slice": [
          {
            "syn": "pat::Slice"
          }
        ],
        "Struct": [
          {
            "syn": "pat::Struct"
          }
        ],
        "Tuple": [
          {
            "syn": "pat::Tuple"
          }
        ],
        "TupleStruct": [
          {
            "syn": "pat::TupleStruct"
          }
        ],
        "Type": [
          {
            "syn": "pat::Type"
          }
        ],
        "Verbatim": [
          {
            "syn": "pm2::Stream"
          }
        ],
        "Wild": [
          {
            "syn": "pat::Wild"
          }
        ]
      },
      "exhaustive": false
    },
    {
      "ident": "pat::Ident",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "by_ref": {
          "option": {
            "token": "Ref"
          }
        },
        "mutability": {
          "option": {
            "token": "Mut"
          }
        },
        "ident": {
          "syn": "Ident"
        },
        "subpat": {
          "option": {
            "tuple": [
              {
                "token": "At"
              },
              {
                "box": {
                  "syn": "pat::Pat"
                }
              }
            ]
          }
        }
      }
    },
    {
      "ident": "pat::Or",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "leading_vert": {
          "option": {
            "token": "Or"
          }
        },
        "cases": {
          "punctuated": {
            "element": {
              "syn": "pat::Pat"
            },
            "punct": "Or"
          }
        }
      }
    },
    {
      "ident": "pat::Paren",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "paren": {
          "group": "Paren"
        },
        "pat": {
          "box": {
            "syn": "pat::Pat"
          }
        }
      }
    },
    {
      "ident": "pat::Ref",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "and": {
          "token": "And"
        },
        "mutability": {
          "option": {
            "token": "Mut"
          }
        },
        "pat": {
          "box": {
            "syn": "pat::Pat"
          }
        }
      }
    },
    {
      "ident": "pat::Rest",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "dot2": {
          "token": "DotDot"
        }
      }
    },
    {
      "ident": "pat::Slice",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "bracket": {
          "group": "Bracket"
        },
        "elems": {
          "punctuated": {
            "element": {
              "syn": "pat::Pat"
            },
            "punct": "Comma"
          }
        }
      }
    },
    {
      "ident": "pat::Struct",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "qself": {
          "option": {
            "syn": "QSelf"
          }
        },
        "path": {
          "syn": "Path"
        },
        "brace": {
          "group": "Brace"
        },
        "fields": {
          "punctuated": {
            "element": {
              "syn": "pat::Field"
            },
            "punct": "Comma"
          }
        },
        "rest": {
          "option": {
            "syn": "pat::Rest"
          }
        }
      }
    },
    {
      "ident": "pat::Tuple",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "paren": {
          "group": "Paren"
        },
        "elems": {
          "punctuated": {
            "element": {
              "syn": "pat::Pat"
            },
            "punct": "Comma"
          }
        }
      }
    },
    {
      "ident": "pat::TupleStruct",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "qself": {
          "option": {
            "syn": "QSelf"
          }
        },
        "path": {
          "syn": "Path"
        },
        "paren": {
          "group": "Paren"
        },
        "elems": {
          "punctuated": {
            "element": {
              "syn": "pat::Pat"
            },
            "punct": "Comma"
          }
        }
      }
    },
    {
      "ident": "pat::Type",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "pat": {
          "box": {
            "syn": "pat::Pat"
          }
        },
        "colon": {
          "token": "Colon"
        },
        "ty": {
          "box": {
            "syn": "Type"
          }
        }
      }
    },
    {
      "ident": "pat::Wild",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "underscore": {
          "token": "Underscore"
        }
      }
    },
    {
      "ident": "Path",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "leading_colon": {
          "option": {
            "token": "PathSep"
          }
        },
        "segments": {
          "punctuated": {
            "element": {
              "syn": "path::Segment"
            },
            "punct": "PathSep"
          }
        }
      }
    },
    {
      "ident": "path::Args",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "variants": {
        "None": [],
        "AngleBracketed": [
          {
            "syn": "path::path::AngledArgs"
          }
        ],
        "Parenthesized": [
          {
            "syn": "path::ParenthesizedArgs"
          }
        ]
      }
    },
    {
      "ident": "path::Segment",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "ident": {
          "syn": "Ident"
        },
        "arguments": {
          "syn": "path::Args"
        }
      }
    },
    {
      "ident": "PredicateLifetime",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "lifetime": {
          "syn": "Lifetime"
        },
        "colon": {
          "token": "Colon"
        },
        "bounds": {
          "punctuated": {
            "element": {
              "syn": "Lifetime"
            },
            "punct": "Plus"
          }
        }
      }
    },
    {
      "ident": "PredicateType",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "lifetimes": {
          "option": {
            "syn": "Bgen::bound::Lifes"
          }
        },
        "bounded_ty": {
          "syn": "Type"
        },
        "colon": {
          "token": "Colon"
        },
        "bounds": {
          "punctuated": {
            "element": {
              "syn": "gen::bound::Type"
            },
            "punct": "Plus"
          }
        }
      }
    },
    {
      "ident": "QSelf",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "lt": {
          "token": "Lt"
        },
        "ty": {
          "box": {
            "syn": "Type"
          }
        },
        "position": {
          "std": "usize"
        },
        "as_": {
          "option": {
            "token": "As"
          }
        },
        "gt": {
          "token": "Gt"
        }
      }
    },
    {
      "ident": "RangeLimits",
      "features": {
        "any": [
          "full"
        ]
      },
      "variants": {
        "HalfOpen": [
          {
            "token": "DotDot"
          }
        ],
        "Closed": [
          {
            "token": "DotDotEq"
          }
        ]
      }
    },
    {
      "ident": "item::Receiver",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "reference": {
          "option": {
            "tuple": [
              {
                "token": "And"
              },
              {
                "option": {
                  "syn": "Lifetime"
                }
              }
            ]
          }
        },
        "mutability": {
          "option": {
            "token": "Mut"
          }
        },
        "self_": {
          "token": "SelfValue"
        },
        "colon": {
          "option": {
            "token": "Colon"
          }
        },
        "ty": {
          "box": {
            "syn": "Type"
          }
        }
      }
    },
    {
      "ident": "typ::Ret",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "variants": {
        "Default": [],
        "Type": [
          {
            "token": "RArrow"
          },
          {
            "box": {
              "syn": "Type"
            }
          }
        ]
      }
    },
    {
      "ident": "item::Sig",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "constness": {
          "option": {
            "token": "Const"
          }
        },
        "asyncness": {
          "option": {
            "token": "Async"
          }
        },
        "unsafety": {
          "option": {
            "token": "Unsafe"
          }
        },
        "abi": {
          "option": {
            "syn": "Abi"
          }
        },
        "fn_": {
          "token": "Fn"
        },
        "ident": {
          "syn": "Ident"
        },
        "gens": {
          "syn": "gen::Gens"
        },
        "paren": {
          "group": "Paren"
        },
        "inputs": {
          "punctuated": {
            "element": {
              "syn": "item::FnArg"
            },
            "punct": "Comma"
          }
        },
        "vari": {
          "option": {
            "syn": "item::Variadic"
          }
        },
        "output": {
          "syn": "typ::Ret"
        }
      }
    },
    {
      "ident": "StaticMutability",
      "features": {
        "any": [
          "full"
        ]
      },
      "variants": {
        "Mut": [
          {
            "token": "Mut"
          }
        ],
        "None": []
      },
      "exhaustive": false
    },
    {
      "ident": "stmt::Stmt",
      "features": {
        "any": [
          "full"
        ]
      },
      "variants": {
        "stmt::Local": [
          {
            "syn": "stmt::Local"
          }
        ],
        "Item": [
          {
            "syn": "Item"
          }
        ],
        "Expr": [
          {
            "syn": "Expr"
          },
          {
            "option": {
              "token": "Semi"
            }
          }
        ],
        "Macro": [
          {
            "syn": "stmt::Mac"
          }
        ]
      }
    },
    {
      "ident": "stmt::Mac",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "mac": {
          "syn": "Macro"
        },
        "semi": {
          "option": {
            "token": "Semi"
          }
        }
      }
    },
    {
      "ident": "gen::bound::Trait",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "paren": {
          "option": {
            "group": "Paren"
          }
        },
        "modifier": {
          "syn": "gen::bound::Modifier"
        },
        "lifetimes": {
          "option": {
            "syn": "Bgen::bound::Lifes"
          }
        },
        "path": {
          "syn": "Path"
        }
      }
    },
    {
      "ident": "gen::bound::Modifier",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "variants": {
        "None": [],
        "Maybe": [
          {
            "token": "Question"
          }
        ]
      }
    },
    {
      "ident": "item::Trait::Item",
      "features": {
        "any": [
          "full"
        ]
      },
      "variants": {
        "Const": [
          {
            "syn": "item::Trait::Const"
          }
        ],
        "Fn": [
          {
            "syn": "item::Trait::Fn"
          }
        ],
        "Type": [
          {
            "syn": "item::Trait::Type"
          }
        ],
        "Macro": [
          {
            "syn": "item::Trait::Mac"
          }
        ],
        "Verbatim": [
          {
            "syn": "pm2::Stream"
          }
        ]
      },
      "exhaustive": false
    },
    {
      "ident": "item::Trait::Const",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "const_": {
          "token": "Const"
        },
        "ident": {
          "syn": "Ident"
        },
        "gens": {
          "syn": "gen::Gens"
        },
        "colon": {
          "token": "Colon"
        },
        "ty": {
          "syn": "Type"
        },
        "default": {
          "option": {
            "tuple": [
              {
                "token": "Eq"
              },
              {
                "syn": "Expr"
              }
            ]
          }
        },
        "semi": {
          "token": "Semi"
        }
      }
    },
    {
      "ident": "item::Trait::Fn",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "sig": {
          "syn": "item::Sig"
        },
        "default": {
          "option": {
            "syn": "Block"
          }
        },
        "semi": {
          "option": {
            "token": "Semi"
          }
        }
      }
    },
    {
      "ident": "item::Trait::Mac",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "mac": {
          "syn": "Macro"
        },
        "semi": {
          "option": {
            "token": "Semi"
          }
        }
      }
    },
    {
      "ident": "item::Trait::Type",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "type": {
          "token": "Type"
        },
        "ident": {
          "syn": "Ident"
        },
        "gens": {
          "syn": "gen::Gens"
        },
        "colon": {
          "option": {
            "token": "Colon"
          }
        },
        "bounds": {
          "punctuated": {
            "element": {
              "syn": "gen::bound::Type"
            },
            "punct": "Plus"
          }
        },
        "default": {
          "option": {
            "tuple": [
              {
                "token": "Eq"
              },
              {
                "syn": "Type"
              }
            ]
          }
        },
        "semi": {
          "token": "Semi"
        }
      }
    },
    {
      "ident": "Type",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "variants": {
        "Array": [
          {
            "syn": "typ::Array"
          }
        ],
        "Fn": [
          {
            "syn": "typ::Fn"
          }
        ],
        "Group": [
          {
            "syn": "typ::Group"
          }
        ],
        "ImplTrait": [
          {
            "syn": "typ::Impl"
          }
        ],
        "Infer": [
          {
            "syn": "typ::Infer"
          }
        ],
        "Macro": [
          {
            "syn": "typ::Mac"
          }
        ],
        "Never": [
          {
            "syn": "typ::Never"
          }
        ],
        "Paren": [
          {
            "syn": "typ::Paren"
          }
        ],
        "Path": [
          {
            "syn": "typ::Path"
          }
        ],
        "Ptr": [
          {
            "syn": "typ::Ptr"
          }
        ],
        "Reference": [
          {
            "syn": "typ::Ref"
          }
        ],
        "Slice": [
          {
            "syn": "typ::Slice"
          }
        ],
        "TraitObject": [
          {
            "syn": "typ::Trait"
          }
        ],
        "Tuple": [
          {
            "syn": "typ::Tuple"
          }
        ],
        "Verbatim": [
          {
            "syn": "pm2::Stream"
          }
        ]
      },
      "exhaustive": false
    },
    {
      "ident": "typ::Array",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "bracket": {
          "group": "Bracket"
        },
        "elem": {
          "box": {
            "syn": "Type"
          }
        },
        "semi": {
          "token": "Semi"
        },
        "len": {
          "syn": "Expr"
        }
      }
    },
    {
      "ident": "typ::Fn",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "lifetimes": {
          "option": {
            "syn": "Bgen::bound::Lifes"
          }
        },
        "unsafety": {
          "option": {
            "token": "Unsafe"
          }
        },
        "abi": {
          "option": {
            "syn": "Abi"
          }
        },
        "fn_": {
          "token": "Fn"
        },
        "paren": {
          "group": "Paren"
        },
        "inputs": {
          "punctuated": {
            "element": {
              "syn": "typ::FnArg"
            },
            "punct": "Comma"
          }
        },
        "vari": {
          "option": {
            "syn": "typ::Variadic"
          }
        },
        "output": {
          "syn": "typ::Ret"
        }
      }
    },
    {
      "ident": "typ::Group",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "group": {
          "group": "Group"
        },
        "elem": {
          "box": {
            "syn": "Type"
          }
        }
      }
    },
    {
      "ident": "typ::Impl",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "impl_": {
          "token": "Impl"
        },
        "bounds": {
          "punctuated": {
            "element": {
              "syn": "gen::bound::Type"
            },
            "punct": "Plus"
          }
        }
      }
    },
    {
      "ident": "typ::Infer",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "underscore": {
          "token": "Underscore"
        }
      }
    },
    {
      "ident": "typ::Mac",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "mac": {
          "syn": "Macro"
        }
      }
    },
    {
      "ident": "typ::Never",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "bang": {
          "token": "Not"
        }
      }
    },
    {
      "ident": "gen::param::Type",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "ident": {
          "syn": "Ident"
        },
        "colon": {
          "option": {
            "token": "Colon"
          }
        },
        "bounds": {
          "punctuated": {
            "element": {
              "syn": "gen::bound::Type"
            },
            "punct": "Plus"
          }
        },
        "eq": {
          "option": {
            "token": "Eq"
          }
        },
        "default": {
          "option": {
            "syn": "Type"
          }
        }
      }
    },
    {
      "ident": "gen::bound::Type",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "variants": {
        "Trait": [
          {
            "syn": "gen::bound::Trait"
          }
        ],
        "Lifetime": [
          {
            "syn": "Lifetime"
          }
        ],
        "Verbatim": [
          {
            "syn": "pm2::Stream"
          }
        ]
      },
      "exhaustive": false
    },
    {
      "ident": "typ::Paren",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "paren": {
          "group": "Paren"
        },
        "elem": {
          "box": {
            "syn": "Type"
          }
        }
      }
    },
    {
      "ident": "typ::Path",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "qself": {
          "option": {
            "syn": "QSelf"
          }
        },
        "path": {
          "syn": "Path"
        }
      }
    },
    {
      "ident": "typ::Ptr",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "star": {
          "token": "Star"
        },
        "const_": {
          "option": {
            "token": "Const"
          }
        },
        "mutability": {
          "option": {
            "token": "Mut"
          }
        },
        "elem": {
          "box": {
            "syn": "Type"
          }
        }
      }
    },
    {
      "ident": "typ::Ref",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "and": {
          "token": "And"
        },
        "lifetime": {
          "option": {
            "syn": "Lifetime"
          }
        },
        "mutability": {
          "option": {
            "token": "Mut"
          }
        },
        "elem": {
          "box": {
            "syn": "Type"
          }
        }
      }
    },
    {
      "ident": "typ::Slice",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "bracket": {
          "group": "Bracket"
        },
        "elem": {
          "box": {
            "syn": "Type"
          }
        }
      }
    },
    {
      "ident": "typ::Trait",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "dyn_": {
          "option": {
            "token": "Dyn"
          }
        },
        "bounds": {
          "punctuated": {
            "element": {
              "syn": "gen::bound::Type"
            },
            "punct": "Plus"
          }
        }
      }
    },
    {
      "ident": "typ::Tuple",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "paren": {
          "group": "Paren"
        },
        "elems": {
          "punctuated": {
            "element": {
              "syn": "Type"
            },
            "punct": "Comma"
          }
        }
      }
    },
    {
      "ident": "UnOp",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "variants": {
        "Deref": [
          {
            "token": "Star"
          }
        ],
        "Not": [
          {
            "token": "Not"
          }
        ],
        "Neg": [
          {
            "token": "Minus"
          }
        ]
      },
      "exhaustive": false
    },
    {
      "ident": "item::Use::Glob",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "star": {
          "token": "Star"
        }
      }
    },
    {
      "ident": "item::Use::Group",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "brace": {
          "group": "Brace"
        },
        "items": {
          "punctuated": {
            "element": {
              "syn": "item::Use::Tree"
            },
            "punct": "Comma"
          }
        }
      }
    },
    {
      "ident": "item::Use::Name",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "ident": {
          "syn": "Ident"
        }
      }
    },
    {
      "ident": "item::Use::Path",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "ident": {
          "syn": "Ident"
        },
        "colon2": {
          "token": "PathSep"
        },
        "tree": {
          "box": {
            "syn": "item::Use::Tree"
          }
        }
      }
    },
    {
      "ident": "item::Use::Rename",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "ident": {
          "syn": "Ident"
        },
        "as_": {
          "token": "As"
        },
        "rename": {
          "syn": "Ident"
        }
      }
    },
    {
      "ident": "item::Use::Tree",
      "features": {
        "any": [
          "full"
        ]
      },
      "variants": {
        "Path": [
          {
            "syn": "item::Use::Path"
          }
        ],
        "Name": [
          {
            "syn": "item::Use::Name"
          }
        ],
        "Rename": [
          {
            "syn": "item::Use::Rename"
          }
        ],
        "Glob": [
          {
            "syn": "item::Use::Glob"
          }
        ],
        "Group": [
          {
            "syn": "item::Use::Group"
          }
        ]
      }
    },
    {
      "ident": "item::Variadic",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "pat": {
          "option": {
            "tuple": [
              {
                "box": {
                  "syn": "pat::Pat"
                }
              },
              {
                "token": "Colon"
              }
            ]
          }
        },
        "dots": {
          "token": "DotDotDot"
        },
        "comma": {
          "option": {
            "token": "Comma"
          }
        }
      }
    },
    {
      "ident": "Variant",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "attrs": {
          "vec": {
            "syn": "attr::Attr"
          }
        },
        "ident": {
          "syn": "Ident"
        },
        "fields": {
          "syn": "Fields"
        },
        "discriminant": {
          "option": {
            "tuple": [
              {
                "token": "Eq"
              },
              {
                "syn": "Expr"
              }
            ]
          }
        }
      }
    },
    {
      "ident": "VisRestricted",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "pub_": {
          "token": "Pub"
        },
        "paren": {
          "group": "Paren"
        },
        "in_": {
          "option": {
            "token": "In"
          }
        },
        "path": {
          "box": {
            "syn": "Path"
          }
        }
      }
    },
    {
      "ident": "Visibility",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "variants": {
        "Public": [
          {
            "token": "Pub"
          }
        ],
        "Restricted": [
          {
            "syn": "VisRestricted"
          }
        ],
        "Inherited": []
      }
    },
    {
      "ident": "gen::Where",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "fields": {
        "where_": {
          "token": "Where"
        },
        "predicates": {
          "punctuated": {
            "element": {
              "syn": "WherePredicate"
            },
            "punct": "Comma"
          }
        }
      }
    },
    {
      "ident": "WherePredicate",
      "features": {
        "any": [
          "derive",
          "full"
        ]
      },
      "variants": {
        "Lifetime": [
          {
            "syn": "PredicateLifetime"
          }
        ],
        "Type": [
          {
            "syn": "PredicateType"
          }
        ]
      },
      "exhaustive": false
    }
  ],
  "tokens": {
    "Abstract": "abstract",
    "And": "&",
    "AndAnd": "&&",
    "AndEq": "&=",
    "As": "as",
    "Async": "async",
    "At": "@",
    "Auto": "auto",
    "Await": "await",
    "Become": "become",
    "Box": "box",
    "Break": "break",
    "Caret": "^",
    "CaretEq": "^=",
    "Colon": ":",
    "Comma": ",",
    "Const": "const",
    "Continue": "continue",
    "Crate": "crate",
    "Default": "default",
    "Do": "do",
    "Dollar": "$",
    "Dot": ".",
    "DotDot": "..",
    "DotDotDot": "...",
    "DotDotEq": "..=",
    "Dyn": "dyn",
    "Else": "else",
    "Enum": "enum",
    "Eq": "=",
    "EqEq": "==",
    "Extern": "extern",
    "FatArrow": "=>",
    "Final": "final",
    "Fn": "fn",
    "For": "for",
    "Ge": ">=",
    "Gt": ">",
    "If": "if",
    "Impl": "impl",
    "In": "in",
    "LArrow": "<-",
    "Le": "<=",
    "Let": "let",
    "Loop": "loop",
    "Lt": "<",
    "Macro": "macro",
    "Match": "match",
    "Minus": "-",
    "MinusEq": "-=",
    "Mod": "mod",
    "Move": "move",
    "Mut": "mut",
    "Ne": "!=",
    "Not": "!",
    "Or": "|",
    "OrEq": "|=",
    "OrOr": "||",
    "Override": "override",
    "PathSep": "::",
    "Percent": "%",
    "PercentEq": "%=",
    "Plus": "+",
    "PlusEq": "+=",
    "Pound": "#",
    "Priv": "priv",
    "Pub": "pub",
    "Question": "?",
    "RArrow": "->",
    "Ref": "ref",
    "Return": "return",
    "SelfType": "Self",
    "SelfValue": "self",
    "Semi": ";",
    "Shl": "<<",
    "ShlEq": "<<=",
    "Shr": ">>",
    "ShrEq": ">>=",
    "Slash": "/",
    "SlashEq": "/=",
    "Star": "*",
    "StarEq": "*=",
    "Static": "static",
    "Struct": "struct",
    "Super": "super",
    "Tilde": "~",
    "Trait": "trait",
    "Try": "try",
    "Type": "type",
    "Typeof": "typeof",
    "Underscore": "_",
    "Union": "union",
    "Unsafe": "unsafe",
    "Unsized": "unsized",
    "Use": "use",
    "Virtual": "virtual",
    "Where": "where",
    "While": "while",
    "Yield": "yield"
  }
}